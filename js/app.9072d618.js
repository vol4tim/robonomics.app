(function(){var e={48900:function(e,t,n){"use strict";var a=n(77162),o=n(48046),r=n(29197),s=n(98473);function i(e,t,n,a,o,r){const i=(0,s.up)("router-view"),u=(0,s.up)("main-layout");return(0,s.wg)(),(0,s.j4)(u,{pagetitle:a.title},{default:(0,s.w5)((()=>[(0,s.Wm)(i)])),_:1},8,["pagetitle"])}function u(e,t,n,a,o,r){const i=(0,s.up)("dapp-header"),u=(0,s.up)("robo-layout");return(0,s.wg)(),(0,s.j4)(u,null,{default:(0,s.w5)((()=>[(0,s.Wm)(i,{title:n.pagetitle},null,8,["title"]),(0,s.WI)(e.$slots,"default")])),_:3})}function c(e,t,n,a,o,r){const i=(0,s.up)("robo-layout-header");return o.renderComponent?((0,s.wg)(),(0,s.j4)(i,{key:0,logoIcon:"images/icon_white.svg",navigation:o.navigation,title:n.title,version:o.version},null,8,["navigation","title","version"])):(0,s.kq)("",!0)}var l=n(55984),d=n.n(l);function p(e){return new(d())(e.toString())}function y(e,t){return p(e).todp(t)}function m(e,t=0,n){return p(e).div(new(d())(10).pow(t.toString())).todp(n).toString()}function f(e,t=0){return p(e).mul(new(d())(10).pow(t.toString())).toString()}function w(){console.log("Build version:","master",{VUE_APP_GIT_SHA:"494b469",VUE_APP_GIT_BRANCH:"master",VUE_APP_ROBONOMICS_UI_KEY:"88tHsnwjp*p36AurOu28W6UZz",NODE_ENV:"production",BASE_URL:""}.VUE_APP_GIT_TAG,"494b469")}d().set({toExpNeg:-31,toExpPos:31});var v=n(65633),h=n(64188),g={props:{title:{type:String,default:"Robonomics Dapp"}},inject:["RobonomicsProvider"],data(){return{renderComponent:!0,navigation:[{title:"Services",links:[{title:"Sensors map",link:"https://sensors.robonomics.network",type:"external"}]},{title:"Tokenomics",links:[{title:"About XRT",link:"https://robonomics.network/xrt/",type:"external"},{title:"Uniswap",link:"https://app.uniswap.org/#/swap?inputCurrency=0x7de91b204c1c737bcee6f000aaa6569cf7061cb7&outputCurrency=0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",type:"external"},{title:"Basilisk",link:"https://app.basilisk.cloud/pools-and-farms",type:"external"}]},{title:"Tools",links:[{title:"Substrate Portal",link:"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/explorer",type:"external"},{title:"Subscan",link:"https://robonomics.subscan.io/",type:"external"},{title:"Polkassembly",link:"https://robonomics.polkassembly.io/",type:"external"}]}],version:" "}},computed:{robonomics:function(){return(0,h.IU)(this.RobonomicsProvider.instance.value)}},watch:{"$store.state.robonomicsUIvue.polkadot.extensionObj":function(e){e.signer&&e.signer.signRaw&&this.$store.state.robonomicsUIvue.polkadot.address&&this.handlerAccount(this.$store.state.robonomicsUIvue.polkadot.address)},"$store.state.robonomicsUIvue.polkadot.address":{handler:function(e){e&&this.$store.state.robonomicsUIvue.polkadot.extensionObj.signer&&this.$store.state.robonomicsUIvue.polkadot.extensionObj.signer.signRaw&&this.handlerAccount(e)},immediate:!0},"RobonomicsProvider.isReady.value":{handler:function(e,t){e&&!t&&this.handlerAccount(this.$store.state.robonomicsUIvue.polkadot.address)},immediate:!0},$route:async function(){this.renderComponent=!1,await this.$nextTick(),this.renderComponent=!0}},async created(){try{const e=await v.Z.get("https://api.github.com/repos/airalab/dapp.robonomics.network/releases/latest");e.data.tag_name&&(this.version=e.data.tag_name)}catch(e){console.log("dApp version not found.")}},methods:{async handlerAccount(e){if(!this.RobonomicsProvider.isReady.value)return;this.unsubscribeBalance&&this.unsubscribeBalance();const t=this.$store.state.robonomicsUIvue.polkadot.accounts.find((t=>t.address===e));t&&("telemetry"!==this.$route.name&&await this.robonomics.accountManager.setSender(e,{type:t.type,extension:this.$store.state.robonomicsUIvue.polkadot.extensionObj}),this.unsubscribeBalance=await this.robonomics.account.getBalance(e,(e=>{const t=e.free.sub(e.frozen);this.$store.commit("polkadot/setBalanceXRT",y(m(t,this.robonomics.api.registry.chainDecimals[0]),4))})))}}},b=n(25312);const k=(0,b.Z)(g,[["render",c]]);var T=k,_=n(44406),I=n(76833),S=n(37695);function A(){const e=(0,s.f3)("RobonomicsProvider");return{accountManager:e.accountManager,isReady:e.isReady,robonomics:e.instance,getInstance:()=>e.instance.value}}const R=(e=null)=>{const{isReady:t,getInstance:n}=A(),a=(0,h.iH)(e),o=(0,h.iH)([]),r=async e=>{if(t.value)try{const t=await n().rws.getDevices(e),a=t.map((e=>e.toHuman()));return localStorage.setItem(`hadevices:${e}`,JSON.stringify({time:Date.now(),value:a})),console.log("getDevices chain"),{data:a,cache:!1}}catch(a){console.log(a)}else{const t=localStorage.getItem(`hadevices:${e}`);if(!t)return{data:[],cache:!0};try{const e=JSON.parse(t);return console.log("getDevices cache"),{data:e.value,cache:!0}}catch(a){console.log("hadevices bad",a)}}return{data:[],cache:!1}},i=async()=>{if(a.value)try{(0,S.Y)(a.value);const e=await r(a.value);if(o.value=e.data,e.cache){const e=(0,s.YP)(t,(async()=>{if(t.value){const t=await r(a.value);o.value=t.data,e()}}),{immediate:!0})}return}catch(e){console.log(e)}o.value=[]};return(0,s.YP)(a,(async()=>{await i()}),{immediate:!0}),(0,s.YP)(t,(async e=>{if(e){const e=await n().events.on({section:"rws",method:"NewDevices"},(async e=>{for(const t of e)t.data[0].toHuman()===a.value&&await i()}));(0,s.Ah)(e)}}),{immediate:!0}),{owner:a,devices:o,loadDevices:i}},C=()=>{const e=new _.P,t={PalletRobonomicsRwsSubscription:{_enum:{Lifetime:{tps:"Compact<u32>"},Daily:{days:"Compact<u32>"}}},PalletRobonomicsRwsSubscriptionLedger:{freeWeight:"Compact<u64>",issueTime:"Compact<u64>",lastUpdate:"Compact<u64>",kind:{_enum:{Lifetime:{tps:"Compact<u32>"},Daily:{days:"Compact<u32>"}}}}};return e.register(t),e},x=(e=null)=>{const t=(0,h.iH)(e),n=(0,h.XI)(null),{isReady:a,getInstance:o}=A(),{devices:r,loadDevices:i}=R(t),u=()=>o().api.consts.rws.referenceCallWeight,c=async e=>{if(a.value){const t=await o().rws.getLedger(e);if(!t.isEmpty)return localStorage.setItem(`hasubscription:${e}`,JSON.stringify({time:Date.now(),value:t.value.toJSON()})),console.log("getLedger chain"),{data:t.value,cache:!1}}else{const n=localStorage.getItem(`hasubscription:${e}`);if(!n)return{data:void 0,cache:!0};try{const e=JSON.parse(n),t=(0,I.Z)(C(),"Option<PalletRobonomicsRwsSubscriptionLedger>",e.value);return console.log("getLedger cache"),{data:t.value,cache:!0}}catch(t){console.log("hasubscription bad",t)}}return{data:void 0,cache:!1}},l=864e5,d=async e=>{const t=(await c(e)).data;if(!t)return-1;const n=t.freeWeight.toNumber(),a=t.lastUpdate.toNumber(),o=t.issueTime.toNumber(),r=u(),s=Date.now();let i=(()=>{let e;if(t.kind.isLifetime)e=t.kind.value.tps.toNumber();else{const n=t.kind.value.days.toNumber(),a=n*l;e=s<o+a?1e4:0}return e})();const d=s-a;return Math.floor(n+r*i*d/1e9)},p=(0,s.Fl)((()=>{if(!n.value)return null;if(n.value.kind.isLifetime)return null;const e=n.value.issueTime.toNumber();let t=0;return n.value.kind.isDaily&&(t=n.value.kind.value.days.toNumber()),e+t*l})),y=(0,s.Fl)((()=>{if(!n.value)return 0;let e=0;return n.value.kind.isDaily&&(e=n.value.kind.value.days.toNumber()),e/30})),m=(0,s.Fl)((()=>!(!n.value||null!==p.value&&Date.now()>p.value))),f=(0,s.Fl)((()=>n.value)),w=async()=>{if(t.value)try{(0,S.Y)(t.value);const e=await c(t.value);if(n.value=e.data,e.cache){const e=(0,s.YP)(a,(async()=>{if(a.value){const a=await c(t.value);n.value=a.data,e()}}),{immediate:!0})}return}catch(e){console.log(e)}n.value=null};return(0,s.YP)(t,(async()=>{await w()}),{immediate:!0}),{owner:t,dataRaw:n,hasSubscription:f,isActive:m,countMonth:y,validUntil:p,loadLedger:w,devices:r,loadDevices:i,getFreeWeightCalc:d}};var U=n(90299),O={components:{DappHeader:T},props:["pagetitle"],setup(){const e=(0,U.oR)(),t=x();(0,s.YP)((()=>e.state.robonomicsUIvue.rws.active),(e=>{t.owner.value=e}),{immediate:!0}),(0,s.YP)([t.owner,t.validUntil],(()=>{e.commit("rws/setExpiredate",t.validUntil)}),{immediate:!0}),(0,s.YP)(t.devices,(t=>{e.commit("rws/setUsers",t)}),{immediate:!0})}};const M=(0,b.Z)(O,[["render",u]]);var W=M,E=n(94731),P={name:"App",components:{MainLayout:W},setup(){const e=(0,s.f3)("RobonomicsProvider"),t=(0,s.f3)("IpfsProvider"),n=(0,U.oR)(),a=(0,E.tv)(),o=(0,E.yj)(),r=(0,h.iH)();return n.commit("rws/setKey","88tHsnwjp*p36AurOu28W6UZz"),n.dispatch("rws/init"),n.commit("rws/setLinkActivate",a.resolve({name:"rwsActivate"}).path),n.commit("rws/setLinkSetup",a.resolve({name:"rwsSetup"}).path),n.commit("rws/setLinkSetupnew",a.resolve({name:"rwsSetupNew"}).path),n.commit("rws/setLinkDevices",a.resolve({name:"telemetry"}).path),n.commit("ipfs/setGateways",t.gateways),(0,s.YP)(o,(()=>{r.value=o?.meta?.title;const e=r.value?`${r.value} / Robonomics Dapp`:"Robonomics Dapp";document.title=e,document.querySelector('meta[property="og:title"]').setAttribute("content",e)})),(0,s.YP)([o,e.isReady],(([e,t])=>{"telemetry"!==e.name&&t&&(n.dispatch("app/setlibp2p",{connected:!1}),n.dispatch("app/setrelay",{connected:!1}))}),{immediate:!0}),{title:r}}};const N=(0,b.Z)(P,[["render",i]]);var D=N,H=(n(57658),n(66665));class ${constructor(e){this.endpoint=e,this.authHeader=null,this.robonomics=null,this._create()}_create(){this.client=(0,H.Ue)({...this._options()})}_options(){return{url:this.endpoint,headers:{authorization:`Basic ${this.authHeader}`,robonomics:this.robonomics}}}isAuth(){return!!this.authHeader&&!!this.robonomics}auth(e,t,n){const a=`sub-${t}:${n}`;this.authHeader=Buffer.from(a).toString("base64"),this.robonomics=e,this._create()}authClear(){this.authHeader=null,this.robonomics=null,this._create()}async ls(e){const t=[];for await(const n of this.client.ls(e))"file"===n.type&&t.push(n);return t}async cat(e){const t=async e=>{const t=new TextDecoder;let n="";for await(const a of this.client.cat(e))n+=t.decode(a,{stream:!0});return n};return await t(e)}async add(e){return await this.client.add(e)}async catViaGateway(e,t,n=5){for(let o=1;o<=n;o++)try{return(await v.Z.get(`${e}${t}`)).data}catch(a){console.log(a)}throw new Error("File not available")}async catViaGateways(e,t){for(const a of e)try{return{gateway:a,result:await this.catViaGateway(a,t)}}catch(n){console.log(n.message)}throw new Error("File not available")}}var B={install:(e,t)=>{const n=(0,h.iH)();e.provide("IpfsProvider",{instance:n,gateways:t.gateways||[]}),n.value=new $(t.api.gateway)}},j=n(11477),F=n(22971),V=n(63310),Y=n(83830),z=n(5487),L=n(95241),Z=n(76220),K=n(64560),X=n(6627),J=n.n(X),q=n(677),G=n.n(q);function Q(e,t,n,a){return G().box.open(e,t,n,a)||null}function ee(e,t,n,a=(0,z.F)(24)){return{nonce:a,sealed:G().box(e,a,n,t)}}function te(e){return J().convertSecretKey(e)}function ne(e){return J().convertPublicKey(e)}function ae(e,t,n){const a=(0,V.Y)(e);return Q(a.slice(24,a.length),a.slice(0,24),ne((0,V.Y)(t)),te(n))}function oe(e,t,n,a){const{nonce:o,sealed:r}=ee((0,V.Y)(e),te(n),ne((0,V.Y)(t)),a);return(0,Y.e)(o,r)}function re(e){const t=(0,L.S)(e),n=(0,Z.U)(t);return n}function se(e){return{pair:e,address:(0,K.m)(e.publicKey,32),encodeAddress:(t=32)=>(0,K.m)(e.publicKey,t),decryptMessage:(t,n)=>ae(t,n,e.secretKey),encryptMessage:(t,n,a)=>oe(t,n,e.secretKey,a)}}var ie=n(49021),ue=n(96134),ce=n(57898),le=n(54129);class de extends F.Uk{constructor(e,t={},n=null){super(e,n),this.extension=null,e.loadAll(t),this.setReady(!0)}async beforeSetSender(e,{type:t,extension:n}){this.extension=n;try{this.keyring.getPair(e)}catch(a){this.keyring.loadInjected(e,{},t)}}async afterSetSender(){await super.afterSetSender(),this.account.meta.isInjected&&this.extension&&(this.api.setSigner(this.extension.signer),this.account.signMsg=async e=>(await this.extension.signer.signRaw({address:this.account.address,data:(0,ue.c)((0,ce.Rl)(e)),type:"bytes"})).signature)}async addUri(e,t={},n="ed25519"){const a=this.keyring.keyring.addFromUri(e,t,n);return await this.setSender(a.address,{type:n})}async addUriPassword(e,t=void 0,n={},a="ed25519"){const{pair:o}=this.keyring.addUri(e,t,n,a);return await this.setSender(o.address,{type:a})}async addJsonPassword(e,t){const n=this.keyring.createFromJson(e);return this.keyring.addPair(n,t),await this.setSender(n.address,{type:n.type})}async addPair(e){const t=this.keyring.keyring.addFromPair(e);return await this.setSender(t.address,{type:t.type})}encryptor(e=null){if(!this.account.meta.isInjected&&"ed25519"===this.account.type){const t=this.account.toJson(e),n=(0,ie.M)(e,(0,le.tV)(t.encoded),t.encoding.type);return se(n)}}}var pe={install:async(e,t)=>{const n=(0,h.iH)(!1),a=(0,h.XI)(),o=new de(j.ZP);e.provide("RobonomicsProvider",{isReady:n,instance:a,accountManager:o}),a.value=await F.l.createInstance(t),a.value.setAccountManager(o),n.value=!0}},ye=n(24887);const me=(0,s._)("b",null,"~ 2 min",-1),fe=(0,s._)("span",null,"What is Robonomics",-1),we=(0,s._)("span",null,"Step-by-step tutorials",-1),ve=(0,s._)("span",null,"Advanced cources",-1);function he(e,t,n,a,o,r){const i=(0,s.up)("robo-template-rws-active"),u=(0,s.up)("robo-text"),c=(0,s.up)("robo-icon"),l=(0,s.up)("robo-link"),d=(0,s.up)("robo-grid"),p=(0,s.up)("robo-details"),y=(0,s.up)("robo-grid-item"),m=(0,s.up)("robo-section"),f=(0,s.up)("robo-button"),w=(0,s.up)("robo-card"),v=(0,s.up)("robo-layout-section");return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s.Wm)(v,{width:"middle-wide"},{default:(0,s.w5)((()=>[(0,s.Wm)(d,{offset:"x0",minColumnWidth:"200px"},{default:(0,s.w5)((()=>[(0,s.Wm)(m,{offset:"x0"},{default:(0,s.w5)((()=>[(0,s.Wm)(w,null,{default:(0,s.w5)((()=>[a.rwsactive&&""!==a.rwsactive?((0,s.wg)(),(0,s.j4)(i,{key:0})):((0,s.wg)(),(0,s.iD)(s.HY,{key:1},[(0,s.Wm)(u,{title:"4",align:"left"},{default:(0,s.w5)((()=>[(0,s.Uk)("RWS subscription")])),_:1}),(0,s.Wm)(m,{offset:"x1"},{default:(0,s.w5)((()=>[(0,s.Wm)(u,{size:"small",weight:"normal-italic"},{default:(0,s.w5)((()=>[(0,s.Wm)(d,{offset:"x0",gap:"x05",columns:"1"},{default:(0,s.w5)((()=>[(0,s.Wm)(y,{borderbottom:""},{default:(0,s.w5)((()=>[(0,s.Uk)(" Price from: "),(0,s._)("b",null,"~ "+(0,ye.zw)(a.price)+" XRT ",1),(0,s.Wm)(p,null,{summary:(0,s.w5)((()=>[(0,s.Wm)(c,{icon:"circle-question"})])),default:(0,s.w5)((()=>[(0,s.Wm)(d,{offset:"x0",gap:"x05"},{default:(0,s.w5)((()=>[(0,s.Wm)(u,{weight:"bold"},{default:(0,s.w5)((()=>[(0,s.Uk)("Where to buy XRT")])),_:1}),(0,s.Wm)(l,{href:"https://app.basilisk.cloud/trade"},{default:(0,s.w5)((()=>[(0,s.Uk)(" Basilisk ")])),_:1}),(0,s.Wm)(l,{href:"https://app.solarbeam.io/exchange/swap"},{default:(0,s.w5)((()=>[(0,s.Uk)(" Solarbeam ")])),_:1}),(0,s.Wm)(l,{href:"https://trade.kraken.com/markets/kraken/xrt/usd"},{default:(0,s.w5)((()=>[(0,s.Uk)(" Kraken ")])),_:1})])),_:1})])),_:1})])),_:1}),(0,s.Wm)(y,{borderbottom:""},{default:(0,s.w5)((()=>[(0,s.Uk)(" Activation time "),me])),_:1}),(0,s.Wm)(y,null,{default:(0,s.w5)((()=>[(0,s.Uk)(" Available subscriptions: "),(0,s._)("b",null,(0,ye.zw)(a.freeAuctions),1)])),_:1})])),_:1})])),_:1})])),_:1}),(0,s.Wm)(f,{router:a.linkActivate,size:"small"},{default:(0,s.w5)((()=>[(0,s.Wm)(c,{icon:"wallet"}),(0,s.Uk)(" Buy a subscription ")])),_:1},8,["router"])],64))])),_:1})])),_:1}),(0,s.Wm)(m,{offset:"x0"},{default:(0,s.w5)((()=>[(0,s.Wm)(u,{title:"4",align:"left"},{default:(0,s.w5)((()=>[(0,s.Uk)("What you get with RWS")])),_:1}),(0,s.Wm)(u,{size:"small",weight:"normal-italic"},{default:(0,s.w5)((()=>[(0,s.Wm)(d,{offset:"x0",gap:"x05",columns:"1"},{default:(0,s.w5)((()=>[(0,s.Wm)(y,{borderbottom:""},{default:(0,s.w5)((()=>[(0,s.Wm)(c,{icon:"check"}),(0,s.Uk)(" Brand-independent smart home ")])),_:1}),(0,s.Wm)(y,{borderbottom:""},{default:(0,s.w5)((()=>[(0,s.Wm)(c,{icon:"check"}),(0,s.Uk)(" Secured data, only you have access ")])),_:1}),(0,s.Wm)(y,{borderbottom:""},{default:(0,s.w5)((()=>[(0,s.Wm)(c,{icon:"check"}),(0,s.Uk)(" Remote control without corporate clouds ")])),_:1}),(0,s.Wm)(y,null,{default:(0,s.w5)((()=>[(0,s.Wm)(c,{icon:"check"}),(0,s.Uk)(" Home assistant integration ")])),_:1})])),_:1})])),_:1})])),_:1}),(0,s.Wm)(m,{offset:"x0"},{default:(0,s.w5)((()=>[(0,s.Wm)(u,{title:"4",align:"left"},{default:(0,s.w5)((()=>[(0,s.Uk)("What is RWS")])),_:1}),(0,s.Wm)(u,{weight:"normal-italic",size:"small",offset:"x1"},{default:(0,s.w5)((()=>[(0,s.Uk)(" Robonomics Web Services (RWS) is a smart home integration that enables secure interaction with smart devices and robots through transactions on the Robonomics parachain, rather than relying on centralized cloud services. ")])),_:1}),(0,s.Wm)(u,{weight:"normal-italic",size:"small",offset:"x1"},{default:(0,s.w5)((()=>[(0,s.Uk)(" An RWS subscription ensures stable transaction processing with every block, making it an ideal choice for those who wish to receive data from devices and remotely manage them. ")])),_:1}),(0,s.Wm)(u,{weight:"normal-italic",size:"small",offset:"x1"},{default:(0,s.w5)((()=>[(0,s.Uk)(" Easy to start for Home Assistant users. "),(0,s.Wm)(l,{href:"https://wiki.robonomics.network/docs/install-smart-home/"},{default:(0,s.w5)((()=>[(0,s.Uk)(" Guide to start ")])),_:1})])),_:1})])),_:1})])),_:1})])),_:1}),(0,s.Wm)(v,null,{default:(0,s.w5)((()=>[(0,s.Wm)(d,{id:"home-links",offset:"x0",columns:3,gap:"x05"},{default:(0,s.w5)((()=>[(0,s.Wm)(l,{href:"https://www.youtube.com/watch?v=onMv_An8h2Q"},{default:(0,s.w5)((()=>[fe])),_:1}),(0,s.Wm)(l,{href:"https://wiki.robonomics.network"},{default:(0,s.w5)((()=>[we])),_:1}),(0,s.Wm)(l,{href:"https://robonomics.academy"},{default:(0,s.w5)((()=>[ve])),_:1})])),_:1})])),_:1})],64)}var ge=n(95496),be={setup(){const e=(0,h.iH)(0),t=(0,h.iH)(0);let n=null;const a=(0,U.oR)(),o=(0,s.Fl)((()=>a.state.robonomicsUIvue.rws.active)),r=(0,s.Fl)((()=>a.state.robonomicsUIvue.rws.links.activate)),{isReady:i,getInstance:u}=A();(0,s.YP)(i,(async a=>{if(a){const a=u();t.value=(await a.rws.getAuctionQueue()).length,n=await a.events.onBlock((async()=>{t.value=(await a.rws.getAuctionQueue()).length}));const o=await a.rws.getMinimalBid();e.value=o.add((0,ge.G)(1))}}),{immediate:!0}),(0,s.Ah)((()=>{n&&n()}));const c=(0,s.Fl)((()=>i.value?m(e.value,u().api.registry.chainDecimals[0],0):0));return{rwsactive:o,linkActivate:r,freeAuctions:t,price:c}}};const ke=(0,b.Z)(be,[["render",he]]);var Te=ke,_e={created:function(){window.location.href=`https://v0.dapp.robonomics.network/${this.$route.href}`}};const Ie=_e;var Se=Ie;function Ae(e,t,n,a,o,r){const i=(0,s.up)("robo-template-rws-buy"),u=(0,s.up)("robo-layout-section");return(0,s.wg)(),(0,s.j4)(u,null,{default:(0,s.w5)((()=>[(0,s.Wm)(i,{price:a.price,activationtime:"2",available:a.freeAuctions,chainInfoUploaded:a.chainInfoStatus,rwsExpiration:a.expiredate,onOnActivate:a.onActivate},null,8,["price","available","chainInfoUploaded","rwsExpiration","onOnActivate"])])),_:1})}const Re=()=>{const e=(0,h.iH)(null),{accountManager:t}=A();t.account&&(e.value=t.account.address);const n=t.onChange((t=>{e.value=t.address}));return{account:e,unsubscribe:n}},Ce=e=>{const t=(0,h.iH)(null),{isReady:n,getInstance:a}=A();let o;return(0,s.YP)([e,n],(async()=>{if(o&&o(),!n.value)return;const r=a();o=await r.account.getBalance(e.value,(e=>{t.value=e.free.sub(e.frozen).toNumber()}))})),{balance:t,unsubscribe:o}},xe=()=>{const{isReady:e,getInstance:t,accountManager:n}=A(),{getFreeWeightCalc:a}=x(),o=async(e,t)=>{if(!t){if(!n.account)throw new Error("Signer required");t=n.account.address}return e.hasPaymentInfo?(await e.paymentInfo(t)).weight.toNumber():0},r=async(e,t)=>{const n=await a(t);if(n<0)throw new Error(`Not found ledger ${t}`);const r=await o(e);if(r>n)throw new Error(`The origin account have no enough free weight to process these call. Call weight ${r}, Free weight ${n}`)},s=()=>{const e=(0,h.iH)(null),t=(0,h.iH)(null),n=(0,h.iH)(!1);return{error:t,process:n,result:e}},i=async(n,a,o=!1)=>{if(n.result.value=null,n.error.value=null,n.process.value=!0,!e.value)return n.error.value="Robonomics is not ready",void(n.process.value=!1);const s=t();try{o&&(await r(a,o),s.accountManager.useSubscription(o));const e=await s.api.rpc.system.accountNextIndex(s.accountManager.account.address);n.result.value=await s.accountManager.signAndSend(a,{nonce:e}),console.log("tx",n.result.value.block,n.result.value.tx)}catch(i){console.log(i),n.error.value=i.message}return n.process.value=!1,o&&s.accountManager.useSubscription(!1),n.result};return{createTx:s,send:i}};var Ue={setup(){const e=(0,h.iH)(0),t=(0,h.iH)(0),n=(0,h.iH)(!1);let a=null;const{isReady:o,getInstance:r}=A(),{account:i,unsubscribe:u}=Re(),{balance:c,unsubscribe:l}=Ce(i),d=x(i),p=R(i);(0,s.YP)(o,(async o=>{if(o){const o=r();t.value=(await o.rws.getAuctionQueue()).length,a=await o.events.onBlock((async()=>{t.value=(await o.rws.getAuctionQueue()).length}));const s=await o.rws.getMinimalBid();e.value=s.add((0,ge.G)(1)),n.value=!0}}),{immediate:!0}),(0,s.Ah)((()=>{a&&a(),l&&l(),u()}));const y=xe(),f=async n=>{if(!o.value)return void n("error","Parachain is not ready.");if(!c.value||(0,ge.G)(c.value).lt(e.value.add((0,ge.G)(1e7))))return void n("error","Subscription can not be activated due to unsuffcicient XRT balance");if(t.value<=0)return void n("error","There are no available subscriptions");if(d.hasSubscription.value&&d.isActive.value)return void n("error","You have an active subscription");const a=r();let u=a.rws.bid(Number(await a.rws.getFirtsFreeAuction()),e.value);p.devices.value.includes(i.value)||(u=a.api.tx.utility.batch([u,a.rws.setDevices([...p.devices.value,i.value])]));const l=y.createTx();if(await y.send(l,u),l.error.value)return void("Cancelled"!==l.error.value?n("error",l.error.value):n("cancel"));const m=await a.events.onBlock((()=>{d.loadLedger()})),f=(0,s.m0)((()=>{d.hasSubscription.value&&d.isActive.value&&(f(),m(),n("ok"))}))},w=(0,s.Fl)((()=>o.value?m(e.value,r().api.registry.chainDecimals[0],0):0));return{freeAuctions:t,price:w,expiredate:d.validUntil,chainInfoStatus:n,onActivate:f}}};const Oe=(0,b.Z)(Ue,[["render",Ae]]);var Me=Oe;function We(e,t,n,a,o,r){const i=(0,s.up)("robo-template-rws-setup"),u=(0,s.up)("robo-layout-section");return(0,s.wg)(),(0,s.j4)(u,null,{default:(0,s.w5)((()=>[(0,s.Wm)(i,{onRwsUpdate:a.rwsUpdateActions,onUserDelete:a.removeUser,onUserAdd:a.addUser,onSaveHapass:a.saveHapass},null,8,["onRwsUpdate","onUserDelete","onUserAdd","onSaveHapass"])])),_:1})}var Ee=n(26444),Pe={setup(){const e=(0,U.oR)(),t=(0,s.Fl)((()=>e.state.robonomicsUIvue.rws.active)),{isReady:n,getInstance:a}=A(),o=xe(),r=R(t),{account:i}=Re(),u=(e,t)=>{if(e.owner&&e.name&&e.controller){try{(0,K.m)(e.owner)}catch(n){return void t("error",`Owner: ${n.message}`)}try{(0,K.m)(e.controller)}catch(n){return void t("error",`Controller: ${n.message}`)}t("ok")}else t("error","All fields are required")},c=async(s,u)=>{if(n.value)if(t.value&&t.value!==i.value)u("error","You do not have access to this action.");else{if(!r.devices.value.includes(s)){const e=await a().rws.setDevices([...r.devices.value,s]),n=o.createTx();if(r.devices.value.includes(i.value)?await o.send(n,e,t.value):await o.send(n,e),n.error.value)return void("Cancelled"!==n.error.value?u("error",n.error.value):u("cancel"));await r.loadDevices()}e.commit("rws/setUsers",r.devices),u("ok")}else u("error","Parachain is not ready.")},l=async(s,u)=>{if(n.value)if(t.value&&t.value!==i.value)u("error","You do not have access to this action.");else{if(r.devices.value.includes(s)){const e=await a().rws.setDevices(r.devices.value.filter((e=>e!==s))),n=o.createTx();if(r.devices.value.includes(i.value)?await o.send(n,e,t.value):await o.send(n,e),n.error.value)return void("Cancelled"!==n.error.value?u("error",n.error.value):u("cancel"));await r.loadDevices()}e.commit("rws/setUsers",r.devices),u("ok")}else u("error","Parachain is not ready.")},d=async(s,i)=>{if(!n.value)return void i("error","Parachain is not ready.");const u=e.state.robonomicsUIvue.rws.user.account,c=a();await c.accountManager.addPair(e.state.robonomicsUIvue.rws.user.key);const l=c.accountManager.encryptor();try{(0,K.m)(u)}catch(h){return void i("error",h.message)}const d=r.devices.value.map((e=>(0,K.m)(e)));if(!d.includes((0,K.m)(u)))return void i("error","User not found in subscription");const p=e.state.robonomicsUIvue.rws.list.find((e=>e.owner===t.value)),y=l.encryptMessage(s,(0,Ee.m)(p.controller)),m=l.encryptMessage(s,(0,Ee.m)(u)),f=await c.datalog.write(JSON.stringify({subscription:p.owner,ha:p.controller,admin:(0,ue.c)(y),user:(0,ue.c)(m)})),w=o.createTx();await o.send(w,f,p.owner);const v=e.state.robonomicsUIvue.polkadot.accounts.find((t=>t.address===e.state.robonomicsUIvue.polkadot.address));v&&await c.accountManager.setSender(v.address,{type:v.type,extension:e.state.robonomicsUIvue.polkadot.extensionObj}),w.error.value?"Cancelled"!==w.error.value?i("error",w.error.value):i("cancel"):i("ok")};return{saveHapass:d,rwsUpdateActions:u,addUser:c,removeUser:l}}};const Ne=(0,b.Z)(Pe,[["render",We]]);var De=Ne;function He(e,t,n,a,o,r){const i=(0,s.up)("robo-template-rws-setup"),u=(0,s.up)("robo-layout-section");return(0,s.wg)(),(0,s.j4)(u,null,{default:(0,s.w5)((()=>[(0,s.Wm)(i,{create:"",onRwsUpdate:a.onSave},null,8,["onRwsUpdate"])])),_:1})}var $e={setup(){let e=(e,t)=>{if(e.owner&&e.name&&e.controller){try{(0,K.m)(e.owner)}catch(n){return void t("error",`Owner: ${n.message}`)}try{(0,K.m)(e.controller)}catch(n){return void t("error",`Controller: ${n.message}`)}t("ok")}else t("error","All fields are required")};return{onSave:e}}};const Be=(0,b.Z)($e,[["render",He]]);var je=Be;function Fe(e,t){const n=(0,s.up)("robo-image"),a=(0,s.up)("robo-link"),o=(0,s.up)("robo-text"),r=(0,s.up)("robo-card"),i=(0,s.up)("robo-grid"),u=(0,s.up)("robo-layout-section");return(0,s.wg)(),(0,s.j4)(u,null,{default:(0,s.w5)((()=>[(0,s.Wm)(i,{offset:"x0",gap:"x1",galign:"start",minColumnWidth:"450px"},{default:(0,s.w5)((()=>[(0,s.Wm)(r,null,{default:(0,s.w5)((()=>[(0,s.Wm)(a,{router:"/telemetry"},{default:(0,s.w5)((()=>[(0,s.Wm)(n,{src:"images/services-ha.jpg"})])),_:1}),(0,s.Wm)(o,{title:"3"},{default:(0,s.w5)((()=>[(0,s.Wm)(a,{router:"/telemetry"},{default:(0,s.w5)((()=>[(0,s.Uk)("Home assistant")])),_:1})])),_:1}),(0,s.Wm)(o,{size:"small"},{default:(0,s.w5)((()=>[(0,s.Uk)(" Integrate Robonomics into your Home assistant dashboard and get Parachain decentralized cloud service all over the word. Manipulate your smart devices bypassing corporate clouds, manage user access wherever you are. Backup your smart home data in blockchain. ")])),_:1})])),_:1}),(0,s.Wm)(r,null,{default:(0,s.w5)((()=>[(0,s.Wm)(a,{href:"https://sensors.robonomics.network/#/"},{default:(0,s.w5)((()=>[(0,s.Wm)(n,{src:"images/services-sensors.jpg"})])),_:1}),(0,s.Wm)(o,{title:"3"},{default:(0,s.w5)((()=>[(0,s.Wm)(a,{href:"https://sensors.robonomics.network/#/"},{default:(0,s.w5)((()=>[(0,s.Uk)(" Sensors Map ")])),_:1})])),_:1}),(0,s.Wm)(o,{size:"small"},{default:(0,s.w5)((()=>[(0,s.Uk)(" The decentralized opensource sensors map offers two distinct layers of decentralization at your choise: peer-to-peer connectivity for direct access to sensor data, and the federative concept for accumulating sensor data and displaying measurement history. Anyone can assemble your own sensor using components available on the free market. ")])),_:1})])),_:1}),(0,s.Wm)(r,null,{default:(0,s.w5)((()=>[(0,s.Wm)(a,{href:"https://dapp.spot-sdk.education"},{default:(0,s.w5)((()=>[(0,s.Wm)(n,{src:"images/services-spot.jpg"})])),_:1}),(0,s.Wm)(o,{title:"3"},{default:(0,s.w5)((()=>[(0,s.Wm)(a,{href:"https://dapp.spot-sdk.education"},{default:(0,s.w5)((()=>[(0,s.Uk)(" Boston Dynamics Spot SDK lessons ")])),_:1})])),_:1}),(0,s.Wm)(o,{size:"small"},{default:(0,s.w5)((()=>[(0,s.Uk)(" Learn and practice with the Boston Dynamics Spot robot wherever you are. After each lesson you will receive a captured video of the robot movements and a printable PDF certificate. ")])),_:1})])),_:1}),(0,s.Wm)(r,null,{default:(0,s.w5)((()=>[(0,s.Wm)(a,{href:"https://telescope.merklebot.com/#/"},{default:(0,s.w5)((()=>[(0,s.Wm)(n,{src:"images/services-telescope.jpg"})])),_:1}),(0,s.Wm)(o,{title:"3"},{default:(0,s.w5)((()=>[(0,s.Wm)(a,{href:"https://telescope.merklebot.com/#/"},{default:(0,s.w5)((()=>[(0,s.Uk)(" An Autonomous Telescope Minting RMRK NFT's ")])),_:1})])),_:1}),(0,s.Wm)(o,{size:"small"},{default:(0,s.w5)((()=>[(0,s.Uk)(" Connect to an autonomous telescope in the dark night of the Atacama desert in Chile to capture an astronomical object and mint unique NFTs in a few clicks. ")])),_:1})])),_:1}),(0,s.Wm)(r,null,{default:(0,s.w5)((()=>[(0,s.Wm)(a,{href:"https://dapp.ipci.io/#/offsetting"},{default:(0,s.w5)((()=>[(0,s.Wm)(n,{src:"images/services-offsetting.jpg"})])),_:1}),(0,s.Wm)(o,{title:"3"},{default:(0,s.w5)((()=>[(0,s.Wm)(a,{href:"https://dapp.ipci.io/#/offsetting"},{default:(0,s.w5)((()=>[(0,s.Uk)(" Smart Building Offsetting ")])),_:1})])),_:1}),(0,s.Wm)(o,{size:"small"},{default:(0,s.w5)((()=>[(0,s.Uk)(" Carbon footprint clearance for smart buildings based on geolocation and energy consumption information. ")])),_:1})])),_:1})])),_:1})])),_:1})}const Ve={},Ye=(0,b.Z)(Ve,[["render",Fe]]);var ze=Ye;function Le(e,t,n,a,o,r){const i=(0,s.up)("Libp2p"),u=(0,s.up)("Launch");return"libp2p"===a.type?((0,s.wg)(),(0,s.j4)(i,{key:0,config:a.config,isKey:a.isKey,onConnected:a.handlerConnected,onError:a.handlerError},null,8,["config","isKey","onConnected","onError"])):((0,s.wg)(),(0,s.j4)(u,{key:1,config:a.config,isKey:a.isKey},null,8,["config","isKey"]))}function Ze(e,t,n,a,o,r){const i=(0,s.up)("robo-template-devices-layout");return(0,s.wg)(),(0,s.j4)(i,{config:n.config,datalog:a.data,updateTime:a.updateTime},null,8,["config","datalog","updateTime"])}function Ke(){const{account:e}=Re(),{instance:t}=(0,s.f3)("IpfsProvider");return(0,s.YP)(e,(async()=>{t.value&&t.value.authClear()})),t.value}var Xe=n(82760);const Je=e=>e.replaceAll("'",'"').replaceAll("\\","").replaceAll('""','"').replaceAll("True","true").replaceAll("False","false").replaceAll("None",'"None"'),qe=e=>{try{return JSON.parse(e)}catch(t){console.log("error parse 1")}try{return JSON.parse(Je(e))}catch(t){console.log("error parse 2"),console.log(e)}return!1},Ge=async(e,t)=>{const n=await e.datalog.getLastId(t);return n.id},Qe=async(e,t)=>{if(console.log("getLastDatalog"),!t)return!1;const n=await Ge(e,t);if(null!==n&&n>=0){const a=await e.datalog.readByIndex(t,n);return{timestamp:a[0].toNumber(),cid:(0,Xe.z)(a[1])}}return!1},et=async(e,t,n)=>{if(console.log("getConfigCid"),!t||!n)return!1;const a=await e.twin.getTwin(n);if(!a)return!1;const o=Object.keys(a).find((e=>a[e]===t));return!!o&&F.P6.hexToCid(o)};var tt=n(38537),nt=n(78434);const at=async(e,t,n)=>{if(!n)return!1;try{return await t.catViaGateway(e.state.robonomicsUIvue.ipfs.activegateway,n,2)}catch(a){try{const a=await t.catViaGateways(e.state.robonomicsUIvue.ipfs.gateways,n);return e.commit("ipfs/setActiveGateway",a.gateway),a.result}catch(o){console.log(o.message)}}return!1},ot=async(e,t,n)=>{if(e)try{const a=(0,Ee.m)(t),o=n.decryptMessage((0,nt.G)(e[n.address]),a),r=se(re((0,Xe.z)(o))),s=r.decryptMessage((0,nt.G)(e.data),a);return qe((0,Xe.z)(s))}catch(a){console.log(a.message)}return!1},rt=async(e,t,n,a,o)=>{if(e){const r=await at(a,o,e);if(!r)return console.log(`Error: ${e} not found in ipfs`),null;const s=await ot(r,t,n);if(s)return s;console.log("Error: decryptMsg")}return null},st=e=>{if(e.state.robonomicsUIvue.rws.active){const n=e.state.robonomicsUIvue.rws.list.find((t=>t.owner===e.state.robonomicsUIvue.rws.active));if(n)try{return{controller:n.controller,owner:n.owner}}catch(t){console.log(t)}}return!1},it=()=>{const e=(0,h.iH)(null),t=(0,h.iH)(null),n=(0,U.oR)();return(0,s.YP)((()=>n.state.robonomicsUIvue.rws.active),(()=>{const a=st(n);a&&(e.value=a.controller,t.value=a.owner)}),{immediate:!0}),{controller:e,owner:t}},ut=(e,t,n=3e3)=>{e.dispatch("app/setStatus",{value:t,timeout:n}),console.log(t)},ct=(e,t,n)=>{e.commit("rws/setLaunch",JSON.stringify({...t,tx:{tx_status:n}}))},lt=()=>{const e=(0,h.iH)(null),t=(0,U.oR)(),n=Ke(),{isReady:a,getInstance:o,accountManager:r}=A(),{controller:i}=it(),u=async e=>{if(a.value){const a=o(),s=await Qe(a,e),i=await rt(s.cid,e,r.encryptor(),t,n);if(i){const o=i.twin_id;ut(t,`Twin id #${o}`),ut(t,"Start load config");const s=await et(a,e,o);s||(console.log("Config not found"),console.log("controller",e),console.log("twin_id",o));const u=await rt(s,e,r.encryptor(),t,n);return localStorage.setItem(`haconfig:${e}`,JSON.stringify({time:Date.now(),value:u})),console.log("getConfig chain"),{data:u,cache:!1}}}else{const t=localStorage.getItem(`haconfig:${e}`);if(!t)return{data:null,cache:!0};try{const e=JSON.parse(t);return console.log("getConfig cache"),{data:e.value,cache:!0}}catch(s){console.log("haconfig bad",s)}}return{data:null,cache:!1}},c=async()=>{if(ut(t,"Find twin id"),!i.value||!r.account||"ed25519"!==r.account.type)return void ut(t,"Error");const n=await u(i.value);if(e.value=n.data,n.cache){const t=(0,s.YP)(a,(async()=>{if(a.value){const n=await u(i.value);e.value=n.data,t()}}),{immediate:!0})}null!==e.value&&ut(t,"Config loaded")};return{config:e,load:c}},dt=()=>{const e=(0,h.iH)(null),t=(0,h.iH)(null),n=(0,h.iH)(null),a=(0,U.oR)(),o=Ke(),{isReady:r,getInstance:i,accountManager:u}=A(),c=xe(),l=R(),{controller:d,owner:p}=it();let y;(0,s.YP)((()=>a.state.robonomicsUIvue.rws.active),(()=>{l.owner.value=a.state.robonomicsUIvue.rws.active}),{immediate:!0});const m=async()=>{r.value&&(y=await i().datalog.on({method:"NewRecord"},(n=>{const a=n.filter((e=>e.success&&d.value&&e.data[0].toHuman()===d.value));for(const o of a)t.value=o.data[1].toNumber(),e.value=o.data[2].toHuman()})))};(0,s.YP)(e,(async()=>{n.value=await rt(e.value,d.value,u.encryptor(),a,o)}));const f=async()=>{if(r.value&&d.value){const n=await Qe(i(),d.value);e.value=n.cid,t.value=n.timestamp}m()},w=()=>{y&&y()};(0,s.Ah)((()=>{console.log("unmount launch"),w()}));const v=async e=>{if(console.log(e.launch.params.entity_id,e.tx.tx_status),"pending"!==e.tx.tx_status)return;if(ut(a,"Launch command"),console.log(`command ${JSON.stringify(e)}`),!l.devices.value.includes(u.account.address))return ut(a,"Error: You do not have access to device management."),void ct(a,e,"error");if(!o.isAuth()){ut(a,"Authorization on ipfs node");try{const e=(await u.account.signMsg((0,tt.d)(u.account.address))).toString();o.auth(p.value,u.account.address,e)}catch(f){return void("Cancelled"===f.message?ct(a,e,"declined"):(console.log(f),ct(a,e,"error")))}ct(a,e,"approved")}const t=u.encryptor(),n=(0,Ee.m)(d.value);let s;try{const a=JSON.stringify(e.launch),r=t.encryptMessage(a,n);s=await o.add((0,ue.c)(r))}catch(f){return ct(a,e,"error"),void ut(a,`Error: ${f.message}`)}if(console.log(`launch ipfs file ${s.path}`),!r.value)return ut(a,"Error: Robonomics is not ready."),void ct(a,e,"error");ut(a,"Send launch");const y=i().launch.send(d.value,s.path),m=c.createTx();await c.send(m,y,p.value),m.error.value?"Cancelled"!==m.error.value?(ct(a,e,"error"),ut(a,`Error: ${m.error.value}`)):(ct(a,e,"declined"),ut(a,"Calcel")):(console.log(e),ct(a,e,"success"),ut(a,"Launch sended"))};return{cid:e,updateTime:t,data:n,run:f,stop:w,launch:v}};var pt={props:{isKey:{default:!1,type:Boolean},config:{default:null,type:Object}},setup(e){const{data:t,updateTime:n,run:a,launch:o}=dt(),r=(0,U.oR)();return(0,s.YP)((()=>e.isKey),(e=>{e&&a()}),{immediate:!0}),(0,s.YP)((()=>r.state.robonomicsUIvue.rws.launch),(e=>{try{o(JSON.parse(e))}catch(t){console.log(t)}})),{data:t,updateTime:n}}};const yt=(0,b.Z)(pt,[["render",Ze]]);var mt=yt;function ft(e,t,n,a,o,r){const i=(0,s.up)("robo-template-devices-layout");return(0,s.wg)(),(0,s.j4)(i,{config:n.config,datalog:a.data,updateTime:a.updateTime},null,8,["config","datalog","updateTime"])}var wt=n(71561),vt=n(5800),ht=n(64071),gt=n(5492),bt=n(82373),kt=n(10055),Tt=n(57993),_t=n(86614),It=n(68816),St=n(4521),At=n(76046),Rt=n(92672);function Ct(){return e=>{async function t(e){return(0,St.z)(e,(async function(e){let t="";for await(const n of e)t+=(0,Rt.B)(n.subarray());return JSON.parse(t)}))}async function n(e,t){return(0,St.z)([(0,At.m)(JSON.stringify(t))],e.sink).finally((()=>{e.close()}))}return{async handle(n,a,o={runOnTransientConnection:!0}){await e.registrar.handle(n,(async({stream:e})=>{a(await t(e),e)}),o)},async request(e,t,n,a={runOnTransientConnection:!0}){if("open"!==e.status)return;const o=await e.newStream([t],a);return(0,St.z)([(0,At.m)(JSON.stringify(n))],o,(async function(e){let t="";for await(const a of e)t+=(0,Rt.B)(a.subarray());try{return JSON.parse(t)}catch(n){return t}}))},utils:{getRequest:t,sendResponse:n}}}}async function xt(){const e=await(0,It.N)({addresses:{listen:["/webrtc"]},transports:[(0,kt.E)({filter:Tt.$6}),(0,bt.Z)(),(0,vt.f)()],streamMuxers:[(0,gt.R)()],connectionEncryption:[(0,wt.t)()],services:{identify:(0,ht.y)(),ha:Ct()},connectionGater:{denyDialMultiaddr:()=>!1},connectionManager:{minConnections:0}});return e}function Ut(e){return(0,_t.HM)(`/dns4/libp2p-relay-1.robonomics.network/tcp/443/wss/p2p/12D3KooWEMFXXvpZUjAuj1eKR11HuzZTCQ5HmYG9MNPtsnqPSERD/p2p-circuit/p2p/${e}`)}async function Ot(e,t){if(t.length>0){const e=[],a=[];for(const n of t){const t=(0,_t.HM)(n),o=t.protoNames();(o.includes("ws")||o.includes("wss"))&&(o.includes("p2p-circuit")?a.push(t):("https:"!==window.location.protocol||o.includes("wss"))&&e.push(t))}if(e.length>0)for(const t of e)try{return await Dt(t),t}catch(n){console.log(n)}if(a.length>0)for(const t of a)try{return await Dt(t),t}catch(n){console.log(n)}}try{const t=Ut(e);return await Dt(t),t}catch(n){console.log(n)}return!1}let Mt=null,Wt=[],Et=null;async function Pt(){if(Mt)return Mt;function e(){Wt=Mt.getConnections().map((e=>e.remoteAddr.toString())),console.log("Update Connections List",Wt)}return Mt=await xt(),await Mt.start(),console.log(`Node started with id ${Mt.peerId.toString()}`),Mt.addEventListener("connection:open",(t=>{console.log("connected",t.detail.remoteAddr.toString()),e()})),Mt.addEventListener("connection:close",(t=>{console.log("disconected",t.detail.remoteAddr.toString()),e(),setTimeout((()=>{Et&&t.detail.remoteAddr.toString()===Et.remoteAddr.toString()&&(console.log("reconnect"),Nt(Et.remoteAddr.toString()))}),1e4)})),Mt}async function Nt(e){try{await Dt(e)}catch(t){console.log(t)}}async function Dt(e){if(console.log("connect to",e.toString()),!Wt.includes(e)){const t=(0,_t.HM)(e);Et=await Mt.dial(t)}return e}async function Ht(){Et&&await Et.close(),Et=null}function $t(e,t="/call"){if(Mt&&Et)return Mt.services.ha.request(Et,t,e);throw new Error("error")}const Bt=()=>{const e=(0,h.iH)(null),t=(0,h.iH)(null),n=(0,U.oR)(),{accountManager:a}=A(),o=R(),{controller:r}=it();(0,s.YP)((()=>n.state.robonomicsUIvue.rws.active),(()=>{o.owner.value=n.state.robonomicsUIvue.rws.active}),{immediate:!0}),(0,s.Ah)((()=>{Ht()}));const i=async(o,s)=>{const i=await Pt();try{ut(n,`Connect to peer id ${o}`);const u=await Ot(o,s);if(u){ut(n,"Connected");const o=i.getProtocols();return o.includes("/update")&&await i.unhandle("/update"),i.services.ha.handle("/update",(async(o,s)=>{const u=await ot(o.data,r.value,a.encryptor());u?(e.value=u,t.value=Date.now(),await i.services.ha.utils.sendResponse(s,{result:!0})):ut(n,"Error: decryptMsg")})),u}}catch(u){ut(n,`Error: ${u.message}`),console.log(u)}return!1},u=async e=>{if(console.log(e.launch.params.entity_id,e.tx.tx_status),"pending"===e.tx.tx_status){if(ut(n,"Launch command"),!o.devices.value.includes(a.account.address))return ut(n,"Error: You do not have access to device management."),void ct(n,e,"error");try{const t=a.encryptor(),o=(0,Ee.m)(r.value),s=JSON.stringify(e.launch),i=t.encryptMessage(s,o),u=await $t({data:{sender:a.account.address,data:(0,ue.c)(i)}});console.log("response:",u),ct(n,e,"success")}catch(t){console.log(t),ut(n,"Error: Check status of the HomeAssistant."),ct(n,e,"error")}}};return{data:e,updateTime:t,run:i,launch:u}};var jt={props:{isKey:{default:!1,type:Boolean},config:{default:null,type:Object}},emits:["connected","error"],setup(e,{emit:t}){const{data:n,updateTime:a,run:o,launch:r}=Bt(),i=(0,U.oR)(),u=e.isKey&&null!==e.config,c=(0,s.YP)((()=>[e.isKey,e.config]),(([e,n])=>{e&&null!==n&&(u||"function"!==typeof c||c(),n.peer_id?(async()=>{const e=await o(n.peer_id,n.libp2p_multiaddress);if(e)if(t("connected",e),e.protoNames().includes("p2p-circuit"))console.log("relay");else{const t=`http://${e.nodeAddress().address}:8080/ipfs/`;i.state.robonomicsUIvue.ipfs.activegateway!==t&&(console.log("set local gateway",t),i.commit("ipfs/setActiveGateway",t))}else t("error",new Error("connect"))})():t("error",new Error("not found peer_id")))}),{immediate:!0,once:u});return(0,s.YP)((()=>i.state.robonomicsUIvue.rws.launch),(e=>{try{r(JSON.parse(e))}catch(t){console.log(t)}})),{data:n,updateTime:a}}};const Ft=(0,b.Z)(jt,[["render",ft]]);var Vt=Ft,Yt={components:{Libp2p:Vt,Launch:mt},setup(){const e=(0,U.oR)(),{isReady:t,accountManager:n}=A(),{config:a,load:o}=lt(),r=(0,h.iH)(!1),i=(0,h.iH)("libp2p");return(0,s.Ah)((async()=>{if(t.value&&r.value&&e.state.robonomicsUIvue.polkadot.address!==n.account.address){const t=e.state.robonomicsUIvue.polkadot.accounts.find((t=>t.address===e.state.robonomicsUIvue.polkadot.address));t&&await n.setSender(t.address,{type:t.type,extension:e.state.robonomicsUIvue.polkadot.extensionObj})}})),(0,s.YP)((()=>e.state.robonomicsUIvue.rws.user.key),(async e=>{e?(await n.addPair(e),r.value=!0,o()):console.log("NOT KEY")}),{immediate:!0}),{type:i,isKey:r,config:a,handlerConnected:t=>{e.dispatch("app/setlibp2p",{connected:!0});let n=!1;t.protoNames().includes("p2p-circuit")&&(n=!0),e.dispatch("app/setrelay",{connected:n})},handlerError:t=>{console.log(t.message),console.log("switch to parachain"),i.value="parachain",e.dispatch("app/setlibp2p",{connected:!1}),e.dispatch("app/setrelay",{connected:!1})}}}};const zt=(0,b.Z)(Yt,[["render",Le]]);var Lt=zt;const Zt={class:"web3"},Kt={key:0},Xt={key:0},Jt=(0,s._)("h2",null,"XRT",-1),qt=(0,s._)("hr",null,null,-1),Gt=(0,s._)("h2",null,"NFT",-1),Qt=(0,s._)("hr",null,null,-1),en=(0,s._)("h2",null,"Vesting",-1),tn={key:1},nn={key:2};function an(e,t,n,a,o,r){const i=(0,s.up)("network-info"),u=(0,s.up)("account-info"),c=(0,s.up)("xrt-info"),l=(0,s.up)("transfer-xrt"),d=(0,s.up)("approve-xrt"),p=(0,s.up)("nft-info"),y=(0,s.up)("transfer-nft"),m=(0,s.up)("vesting-info"),f=(0,s.up)("create-vesting");return(0,s.wg)(),(0,s.iD)("div",Zt,[a.$web3.state.isReady?((0,s.wg)(),(0,s.iD)("div",Kt,[(0,s.Wm)(i),(0,s.Wm)(u),a.$web3.state.account?((0,s.wg)(),(0,s.iD)("div",Xt,[(0,s._)("div",null,[Jt,(0,s.Wm)(c),(0,s.Wm)(l),(0,s.Wm)(d)]),qt,(0,s._)("div",null,[Gt,(0,s.Wm)(p),(0,s.Wm)(y)]),Qt,(0,s._)("div",null,[en,(0,s.Wm)(m),(0,s.Wm)(f)])])):(0,s.kq)("",!0)])):((0,s.wg)(),(0,s.iD)("div",tn,"...")),a.$web3.state.error?((0,s.wg)(),(0,s.iD)("div",nn,(0,ye.zw)(a.$web3.state.error),1)):(0,s.kq)("",!0)])}var on=n(18414),rn=n(4812);const sn={PROVIDER:4,NETWORK:1,ACCOUNT:2};class un extends Error{constructor(e=null,...t){super(...t),this.code=e}}class cn{async activate(){}async getProvider(){}async getAccount(){}async getNetworkId(){}}class ln extends cn{constructor(e){super(),this.name="metamask",this.account=null,this.networkId=null,this.emit=e}handleAccountsChanged(e){e.length>0?this.account=e[0]:this.account=null,this.emit("accountsChanged",{account:this.account})}handleChainChanged(e){this.networkId=Number(e),this.emit("chainChanged",{networkId:this.networkId})}handleDisconnect(){this.account=null,this.emit("disconnect")}async activate(){if(!window.ethereum)throw new un(sn.PROVIDER,"Not found metamask");try{return await window.ethereum.request({method:"eth_requestAccounts"}),!0}catch(e){return!1}}async getProvider(){if(window.ethereum)return window.ethereum.autoRefreshOnNetworkChange=!1,window.ethereum.on("accountsChanged",(e=>{this.handleAccountsChanged(e)})),window.ethereum.on("chainChanged",(e=>{this.handleChainChanged(e)})),window.ethereum.on("disconnect",(()=>{this.handleDisconnect()})),window.ethereum;throw new un(sn.PROVIDER,"Not found metamask")}async getNetworkId(){return this.networkId=Number(await window.ethereum.request({method:"eth_chainId"})),this.networkId}async getAccount(){if(!window.ethereum)throw new un(sn.PROVIDER,"Not found metamask");const e=await window.ethereum.request({method:"eth_accounts"});if(e.length>0)return this.account=e[0],this.account;throw new un(sn.ACCOUNT,"You need to unblock metamask")}async isAuthorized(){if(!window.ethereum)return!1;try{const e=await window.ethereum.request({method:"eth_accounts"});return!!e.length}catch(e){return!1}}}class dn extends cn{constructor({networkId:e=1,key:t=""}){super(),this.name="infura",this.account=null,this.networkId=e,this.key=t}async activate(){throw new un(sn.PROVIDER,"Not found metamask")}async getProvider(){if(1===this.networkId)return"wss://mainnet.infura.io/ws/v3/"+this.key;if(11155111===this.networkId)return"wss://sepolia.infura.io/ws/v3/"+this.key;throw new un(sn.PROVIDER,"Bad config for infura")}async getAccount(){return null}async getNetworkId(){return this.networkId}}class pn{constructor({networks:e=[]}={}){this.provider=null,this.connector=null,this.signer=null,this.networks=e,this.state=(0,h.qj)({isReady:!1,error:null,account:null,networkId:null,block:null})}async setConnector(e){if("metamask"===e.name){this.provider=new on.Q(await e.getProvider());try{this.signer=await this.provider.getSigner()}catch(t){console.log(t)}}else this.provider=new rn.q(await e.getProvider());this.connector=e}on(e,t){"accountsChanged"===e?this.state.account=t.account:"chainChanged"===e&&(this.state.networkId=t.networkId),this.networks.includes(this.state.networkId)?this.state.error=null:this.state.error=new un(sn.NETWORK,"Please, switch to Mainnet")}async init(e){this.networks=e.networks;try{await this.setConnector(new ln(((e,t)=>this.on(e,t)))),await this.connector.isAuthorized()&&(this.state.account=await this.connector.getAccount())}catch(t){if(console.warn(t.message),e.infura)try{await this.setConnector(new dn(e.infura))}catch(t){this.state.error=t}}try{this.connector&&(this.state.networkId=await this.connector.getNetworkId(),this.networks.includes(this.state.networkId)||(this.state.error=new un(sn.NETWORK,`Please, switch to network id ${this.networks}`)))}catch(t){this.state.error=t}this.provider&&null===this.state.error&&(this.state.isReady=!0,this.provider.on("block",(async e=>{this.state.block=await this.provider.getBlock(e)})),this.state.block=await this.provider.getBlock("latest"))}async initAccount(){try{await this.connector.activate()&&(this.state.account=await this.connector.getAccount())}catch(e){this.state.error=e}}}const yn=new pn,mn={key:0},fn=(0,s._)("h2",null,"Account",-1),wn={key:0},vn={key:1};function hn(e,t,n,a,o,r){return a.$web3.state.isReady?((0,s.wg)(),(0,s.iD)("div",mn,[fn,a.$web3.state.account?((0,s.wg)(),(0,s.iD)("div",wn,[(0,s._)("div",null,"account: "+(0,ye.zw)(a.$web3.state.account),1),(0,s._)("div",null,"balance: "+(0,ye.zw)(e.$filters.balance(a.balance,18,"ETH")),1)])):((0,s.wg)(),(0,s.iD)("div",vn,[(0,s._)("button",{onClick:t[0]||(t[0]=e=>a.$web3.initAccount())},"Connect ethereum account")]))])):(0,s.kq)("",!0)}var gn={setup(){const e=(0,h.iH)(null);return(async()=>{try{yn.state.account&&(e.value=await yn.provider.getBalance(yn.state.account))}catch(t){console.log(t)}})(),(0,s.YP)((()=>yn.state.block),(async()=>{try{yn.state.account&&(e.value=await yn.provider.getBalance(yn.state.account))}catch(t){console.log(t)}})),{balance:e,$web3:yn}}};const bn=(0,b.Z)(gn,[["render",hn]]);var kn=bn;const Tn=(0,s._)("h2",null,"Approve XRT",-1),_n={class:"input"},In=(0,s._)("label",{for:"amount"},"amount",-1),Sn={class:"input"},An=(0,s._)("label",{for:"to"},"to",-1),Rn={key:0};function Cn(e,t,n,a,o,i){const u=(0,s.up)("btn-send");return(0,s.wg)(),(0,s.iD)("div",null,[Tn,(0,s._)("form",{onSubmit:t[2]||(t[2]=(0,r.iM)((()=>{}),["prevent"]))},[(0,s._)("div",_n,[In,(0,s.wy)((0,s._)("input",{"onUpdate:modelValue":t[0]||(t[0]=e=>a.amount=e),id:"amount"},null,512),[[r.nr,a.amount]])]),(0,s._)("div",Sn,[An,(0,s.wy)((0,s._)("input",{"onUpdate:modelValue":t[1]||(t[1]=e=>a.to=e),id:"to"},null,512),[[r.nr,a.to]])]),(0,s.Wm)(u,{onClick:a.send},{default:(0,s.w5)((()=>[(0,s.Uk)("Send")])),_:1},8,["onClick"])],32),null!==a.allowance?((0,s.wg)(),(0,s.iD)("div",Rn," current approve: "+(0,ye.zw)(e.$filters.balance(a.allowance,9,"XRT")),1)):(0,s.kq)("",!0)])}var xn=n(37007),Un=JSON.parse('[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}]');const On=["disabled"],Mn={key:0,class:"error"},Wn={key:1,class:"success"};function En(e,t,n,a,o,r){return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s._)("button",{onClick:t[0]||(t[0]=(...e)=>a.send&&a.send(...e)),disabled:a.status===a.STATUS.PRE_PROCESS||a.status===a.STATUS.WAIT_TX},[(0,s.WI)(e.$slots,"default")],8,On),a.status===a.STATUS.ERROR?((0,s.wg)(),(0,s.iD)("div",Mn,(0,ye.zw)(a.error),1)):(0,s.kq)("",!0),a.status===a.STATUS.READY?((0,s.wg)(),(0,s.iD)("div",Wn,"✓")):(0,s.kq)("",!0)],64)}const Pn={NEW:1,PRE_PROCESS:2,WAIT_TX:3,READY:4,ERROR:5};var Nn={emits:["click"],setup(e,{emit:t}){const n=(0,h.iH)(Pn.NEW),a=(0,h.iH)(null),o=async()=>{n.value=Pn.PRE_PROCESS,a.value=null,t("click",(async(e,t,o=!0)=>{n.value=Pn.WAIT_TX;try{if(e){const t=await e.wait();console.log(t.hash),o&&(n.value=Pn.READY)}else t&&("ACTION_REJECTED"!==t.code?(n.value=Pn.ERROR,a.value=t.code||t):n.value=Pn.NEW)}catch(r){n.value=Pn.ERROR,a.value=r.message}}))};return{STATUS:Pn,status:n,error:a,send:o}}};const Dn=(0,b.Z)(Nn,[["render",En]]);var Hn=Dn;const $n={xrt:"0x9516AFb2b538CAbDcC04e2289E9d48eEBD8fa6ef",tokenVesting:"0xf1ba89053f407DF832b135F19fDB064C7A97E1F3",nft:"0x0c0C092f372c3Cb49D116A14fA7dcc40e84275aa"};var Bn={components:{BtnSend:Hn},setup(){const e=(0,h.iH)(1),t=(0,h.iH)(""),n=(0,h.iH)(null),a=new xn.CH($n.xrt,Un,yn.provider);(0,s.YP)((()=>yn.state.block),(async()=>{try{t.value&&(n.value=await a.allowance(yn.state.account,t.value))}catch(e){console.log(e)}}));const o=async n=>{try{const o=await a.connect(yn.signer).approve(t.value,f(e.value,9));await n(o)}catch(o){"CALL_EXCEPTION"===o.code&&o.data?await n(null,a.interface.parseError(o.data).name):await n(null,o)}};return{amount:e,to:t,allowance:n,send:o}}};const jn=(0,b.Z)(Bn,[["render",Cn]]);var Fn=jn;const Vn=(0,s._)("h2",null,"Create Vesting",-1);function Yn(e,t,n,a,o,r){const i=(0,s.up)("btn-send");return(0,s.wg)(),(0,s.iD)("div",null,[Vn,(0,s.Wm)(i,{onClick:a.send},{default:(0,s.w5)((()=>[(0,s.Uk)("Send")])),_:1},8,["onClick"])])}var zn=JSON.parse('[{"inputs":[{"internalType":"address","name":"token_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address","name":"holder","type":"address"}],"name":"computeNextVestingScheduleIdForHolder","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"vestingScheduleId","type":"bytes32"}],"name":"computeReleasableAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"computeVestingScheduleIdForAddressAndIndex","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"createVestingSchedule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"}],"name":"getLastVestingScheduleForHolder","outputs":[{"components":[{"internalType":"address","name":"beneficiary","type":"address"},{"internalType":"uint256","name":"cliff","type":"uint256"},{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"slicePeriodSeconds","type":"uint256"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"uint256","name":"amountTotal","type":"uint256"},{"internalType":"uint256","name":"released","type":"uint256"},{"internalType":"bool","name":"revoked","type":"bool"}],"internalType":"struct TokenVesting.VestingSchedule","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNft","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getVestingIdAtIndex","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"vestingScheduleId","type":"bytes32"}],"name":"getVestingSchedule","outputs":[{"components":[{"internalType":"address","name":"beneficiary","type":"address"},{"internalType":"uint256","name":"cliff","type":"uint256"},{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"slicePeriodSeconds","type":"uint256"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"uint256","name":"amountTotal","type":"uint256"},{"internalType":"uint256","name":"released","type":"uint256"},{"internalType":"bool","name":"revoked","type":"bool"}],"internalType":"struct TokenVesting.VestingSchedule","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getVestingScheduleByAddressAndIndex","outputs":[{"components":[{"internalType":"address","name":"beneficiary","type":"address"},{"internalType":"uint256","name":"cliff","type":"uint256"},{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"slicePeriodSeconds","type":"uint256"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"uint256","name":"amountTotal","type":"uint256"},{"internalType":"uint256","name":"released","type":"uint256"},{"internalType":"bool","name":"revoked","type":"bool"}],"internalType":"struct TokenVesting.VestingSchedule","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVestingSchedulesCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_beneficiary","type":"address"}],"name":"getVestingSchedulesCountByBeneficiary","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVestingSchedulesTotalAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWithdrawableAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nftOwned","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nftTransferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"vestingScheduleId","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"release","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"vestingScheduleId","type":"bytes32"}],"name":"revoke","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"string","name":"uri","type":"string"}],"name":"safeMintNft","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"setAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"name":"setDuration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"nft","type":"address"}],"name":"setNft","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}]'),Ln={components:{BtnSend:Hn},setup(){const e=new xn.CH($n.xrt,Un,yn.provider),t=new xn.CH($n.tokenVesting,zn,yn.provider),n=async n=>{const a=await t.getAmount();try{const t=await e.allowance(yn.state.account,$n.tokenVesting);if(t>=a)return;const o=await e.balanceOf(yn.state.account);if(o<a)throw new Error("There are not enough tokens on your balance");const r=await e.connect(yn.signer).approve($n.tokenVesting,a);await n(r,null,!1)}catch(o){if("CALL_EXCEPTION"===o.code&&o.data)throw new Error(e.interface.parseError(o.data).name);throw o}},a=async e=>{try{const n=await t.connect(yn.signer).createVestingSchedule();await e(n)}catch(n){if("CALL_EXCEPTION"===n.code&&n.data)throw new Error(t.interface.parseError(n.data).name);throw n}},o=async e=>{try{await n(e),await a(e)}catch(t){await e(null,t)}};return{send:o}}};const Zn=(0,b.Z)(Ln,[["render",Yn]]);var Kn=Zn;const Xn={key:0},Jn=(0,s._)("h2",null,"Network Info",-1);function qn(e,t,n,a,o,r){return a.$web3.state.isReady?((0,s.wg)(),(0,s.iD)("div",Xn,[Jn,(0,s._)("div",null,"networkId: "+(0,ye.zw)(a.$web3.state.networkId),1),(0,s._)("div",null,"blockNumber: "+(0,ye.zw)(a.$web3.state.block?.number),1)])):(0,s.kq)("",!0)}var Gn={setup(){return{$web3:yn}}};const Qn=(0,b.Z)(Gn,[["render",qn]]);var ea=Qn;const ta={class:"container"};function na(e,t,n,a,o,r){const i=(0,s.up)("nft-token");return(0,s.wg)(),(0,s.iD)("div",null,[(0,s._)("div",null,"balance: "+(0,ye.zw)(a.balance)+" NFT",1),(0,s._)("div",ta,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(a.tokens,(e=>((0,s.wg)(),(0,s.j4)(i,{key:e.tokenId,token:e,onActivate:a.loadTokens,class:"card"},null,8,["token","onActivate"])))),128))])])}var aa=JSON.parse('[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ERC721EnumerableForbiddenBatchMint","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ERC721OutOfBoundsIndex","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"TokenActivated","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"activate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"activatedOf","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"string","name":"uri","type":"string"}],"name":"safeMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}]');const oa=(0,s._)("br",null,null,-1),ra=["src"],sa=(0,s._)("br",null,null,-1),ia={key:1};function ua(e,t,n,a,o,r){const i=(0,s.up)("btn-send");return(0,s.wg)(),(0,s.iD)("div",null,[(0,s.Uk)((0,ye.zw)(n.token.name),1),oa,(0,s._)("img",{src:`https://ipfs.io/ipfs/${n.token.image}`,style:{width:"200px"}},null,8,ra),sa,n.token.activated?((0,s.wg)(),(0,s.iD)("span",ia,"activated")):((0,s.wg)(),(0,s.j4)(i,{key:0,onClick:t[0]||(t[0]=e=>a.activate(e,n.token.tokenId))},{default:(0,s.w5)((()=>[(0,s.Uk)(" Activate ")])),_:1}))])}var ca={props:["token"],emits:["activate"],components:{BtnSend:Hn},setup(e,{emit:t}){const n=async(e,n)=>{const a=new xn.CH($n.nft,aa,yn.provider);try{const o=await a.connect(yn.signer).activate(n);await e(o),t("activate",n)}catch(o){"CALL_EXCEPTION"===o.code&&o.data?await e(null,a.interface.parseError(o.data).name):await e(null,o)}};return{activate:n}}};const la=(0,b.Z)(ca,[["render",ua]]);var da=la,pa={components:{NftToken:da},setup(){const e=(0,h.iH)(null),t=(0,h.iH)([]),n=new xn.CH($n.nft,aa,yn.provider);(async()=>{try{e.value=await n.balanceOf(yn.state.account)}catch(t){console.log(t)}})(),(0,s.YP)((()=>yn.state.block),(async()=>{try{e.value=await n.balanceOf(yn.state.account)}catch(t){console.log(t)}}));const a=async()=>{if(!e.value)return;const a=[];for(let t=0;t<e.value;t++)try{const e=await n.tokenOfOwnerByIndex(yn.state.account,t),o=await n.tokenURI(e),r=o.split("ipfs://").pop(),s=await v.Z.get(`https://ipfs.io/ipfs/${r}`);a.push({activated:await n.activatedOf(e),tokenId:e.toString(),name:`${s.data.name} #${e.toString()}`,image:s.data.image.split("ipfs://").pop()})}catch(o){console.log(o)}t.value=a};return(0,s.YP)(e,a),{balance:e,tokens:t,loadTokens:a}}};const ya=(0,b.Z)(pa,[["render",na],["__scopeId","data-v-02cdbc10"]]);var ma=ya;const fa=(0,s._)("h2",null,"Transfer NFT",-1),wa={class:"input"},va=(0,s._)("label",{for:"tokenId"},"tokenId",-1),ha={class:"input"},ga=(0,s._)("label",{for:"to"},"to",-1);function ba(e,t,n,a,o,i){const u=(0,s.up)("btn-send");return(0,s.wg)(),(0,s.iD)("div",null,[fa,(0,s._)("form",{onSubmit:t[2]||(t[2]=(0,r.iM)((()=>{}),["prevent"]))},[(0,s._)("div",wa,[va,(0,s.wy)((0,s._)("input",{"onUpdate:modelValue":t[0]||(t[0]=e=>a.tokenId=e),id:"tokenId"},null,512),[[r.nr,a.tokenId]])]),(0,s._)("div",ha,[ga,(0,s.wy)((0,s._)("input",{"onUpdate:modelValue":t[1]||(t[1]=e=>a.to=e),id:"to"},null,512),[[r.nr,a.to]])]),(0,s.Wm)(u,{onClick:a.send},{default:(0,s.w5)((()=>[(0,s.Uk)("Send")])),_:1},8,["onClick"])],32)])}var ka={components:{BtnSend:Hn},setup(){const e=(0,h.iH)(),t=(0,h.iH)(""),n=async n=>{const a=new xn.CH($n.nft,aa,yn.provider);try{console.log(1);const o=await a.connect(yn.signer).transferFrom(yn.state.account,t.value,e.value);console.log(2),await n(o)}catch(o){"CALL_EXCEPTION"===o.code&&o.data?await n(null,a.interface.parseError(o.data).name):await n(null,o)}};return{tokenId:e,to:t,send:n}}};const Ta=(0,b.Z)(ka,[["render",ba]]);var _a=Ta;const Ia=(0,s._)("h2",null,"Transfer XRT",-1),Sa={class:"input"},Aa=(0,s._)("label",{for:"amount"},"amount",-1),Ra={class:"input"},Ca=(0,s._)("label",{for:"to"},"to",-1);function xa(e,t,n,a,o,i){const u=(0,s.up)("btn-send");return(0,s.wg)(),(0,s.iD)("div",null,[Ia,(0,s._)("form",{onSubmit:t[2]||(t[2]=(0,r.iM)((()=>{}),["prevent"]))},[(0,s._)("div",Sa,[Aa,(0,s.wy)((0,s._)("input",{"onUpdate:modelValue":t[0]||(t[0]=e=>a.amount=e),id:"amount"},null,512),[[r.nr,a.amount]])]),(0,s._)("div",Ra,[Ca,(0,s.wy)((0,s._)("input",{"onUpdate:modelValue":t[1]||(t[1]=e=>a.to=e),id:"to"},null,512),[[r.nr,a.to]])]),(0,s.Wm)(u,{onClick:a.send},{default:(0,s.w5)((()=>[(0,s.Uk)("Send")])),_:1},8,["onClick"])],32)])}var Ua={components:{BtnSend:Hn},setup(){const e=(0,h.iH)(1),t=(0,h.iH)(""),n=new xn.CH($n.xrt,Un,yn.provider),a=async a=>{try{const o=await n.connect(yn.signer).transfer(t.value,f(e.value,9));await a(o)}catch(o){"CALL_EXCEPTION"===o.code&&o.data?await a(null,n.interface.parseError(o.data).name):await a(null,o)}};return{amount:e,to:t,send:a}}};const Oa=(0,b.Z)(Ua,[["render",xa]]);var Ma=Oa;const Wa={class:"container"};function Ea(e,t,n,a,o,r){const i=(0,s.up)("vesting-schedule");return(0,s.wg)(),(0,s.iD)("div",null,[(0,s._)("div",null,"count: "+(0,ye.zw)(a.count),1),(0,s._)("div",null,"amount: "+(0,ye.zw)(e.$filters.balance(a.amount,9,"XRT")),1),(0,s._)("div",null,"duration: "+(0,ye.zw)(a.duration)+" sec",1),(0,s._)("div",Wa,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(a.vestingSchedules,((e,t)=>((0,s.wg)(),(0,s.iD)("div",{key:t,class:"card"},[(0,s.Wm)(i,{schedule:e},null,8,["schedule"])])))),128))])])}function Pa(e,t,n,a,o,r){const i=(0,s.up)("btn-send");return(0,s.wg)(),(0,s.iD)("div",null,[(0,s._)("div",null,"start: "+(0,ye.zw)(a.start),1),(0,s._)("div",null,"end: "+(0,ye.zw)(a.end),1),(0,s._)("div",null," amountTotal: "+(0,ye.zw)(e.$filters.balance(n.schedule.amountTotal,9,"XRT")),1),(0,s._)("div",null,"released: "+(0,ye.zw)(e.$filters.balance(n.schedule.released,9,"XRT")),1),(0,s._)("div",null," releasable: "+(0,ye.zw)(e.$filters.balance(a.computeReleasableAmount,9,"XRT")),1),a.canRelease?((0,s.wg)(),(0,s.j4)(i,{key:0,onClick:t[0]||(t[0]=e=>a.release(e,n.schedule.id))},{default:(0,s.w5)((()=>[(0,s.Uk)(" Release ")])),_:1})):(0,s.kq)("",!0)])}var Na={props:{schedule:Object},components:{BtnSend:Hn},setup(e){const t=(0,h.iH)(0);(0,s.YP)((()=>yn.state.block),(e=>{e&&(t.value=e.timestamp)}),{immediate:!0});const n=(0,s.Fl)((()=>new Date(1e3*e.schedule.cliff).toLocaleString())),a=(0,s.Fl)((()=>new Date(1e3*(Number(e.schedule.start)+Number(e.schedule.duration))).toLocaleString())),o=(0,s.Fl)((()=>e.schedule.released<e.schedule.amountTotal&&r.value>0)),r=(0,s.Fl)((()=>{const n=t.value;if(n<e.schedule.cliff||e.schedule.revoked)return 0;if(n>=e.schedule.cliff+e.schedule.duration)return e.schedule.amountTotal-e.schedule.released;{const t=n-e.schedule.cliff,a=e.schedule.slicePeriodSeconds,o=t/a,r=o*a,s=parseInt(e.schedule.amountTotal*r/e.schedule.duration);return s-e.schedule.released}})),i=async(e,t)=>{const n=new xn.CH($n.tokenVesting,zn,yn.provider),a=await n.computeReleasableAmount(t);if(a>0)try{const o=await n.connect(yn.signer).release(t,a);await e(o)}catch(o){"CALL_EXCEPTION"===o.code&&o.data?await e(null,n.interface.parseError(o.data).name):await e(null,o)}else await e(null,null)};return{start:n,end:a,computeReleasableAmount:r,canRelease:o,release:i}}};const Da=(0,b.Z)(Na,[["render",Pa]]);var Ha=Da,$a={components:{VestingSchedule:Ha},setup(){const e=(0,h.iH)(null),t=(0,h.iH)(null),n=(0,h.iH)(null),a=(0,h.iH)([]),o=new xn.CH($n.tokenVesting,zn,yn.provider);return(async()=>{try{t.value=await o.getAmount(),n.value=await o.getDuration(),e.value=await o.getVestingSchedulesCountByBeneficiary(yn.state.account)}catch(a){console.log(a)}})(),(0,s.YP)((()=>yn.state.block),(async()=>{try{e.value=await o.getVestingSchedulesCountByBeneficiary(yn.state.account)}catch(t){console.log(t)}})),(0,s.YP)(e,(async e=>{if(!(e<=0))try{const t=[];for(let n=0;n<e;n++){const e=await o.getVestingScheduleByAddressAndIndex(yn.state.account,n),a=await o.computeVestingScheduleIdForAddressAndIndex(yn.state.account,n);t.push({id:a,beneficiary:e[0],cliff:Number(e[1]),start:Number(e[2]),duration:Number(e[3]),slicePeriodSeconds:Number(e[4]),revocable:e[5],amountTotal:Number(e[6]),released:Number(e[7]),revoked:e[8]})}a.value=t}catch(t){console.log(t)}})),{amount:t,duration:n,count:e,vestingSchedules:a}}};const Ba=(0,b.Z)($a,[["render",Ea],["__scopeId","data-v-1ad63fcc"]]);var ja=Ba;function Fa(e,t,n,a,o,r){return(0,s.wg)(),(0,s.iD)("div",null,[(0,s._)("div",null,"balance: "+(0,ye.zw)(e.$filters.balance(a.balance,9,"XRT")),1)])}var Va={setup(){const e=(0,h.iH)(null),t=new xn.CH($n.xrt,Un,yn.provider);return(async()=>{try{e.value=await t.balanceOf(yn.state.account)}catch(n){console.log(n)}})(),(0,s.YP)((()=>yn.state.block),(async()=>{try{e.value=await t.balanceOf(yn.state.account)}catch(n){console.log(n)}})),{balance:e}}};const Ya=(0,b.Z)(Va,[["render",Fa]]);var za=Ya,La={components:{NetworkInfo:ea,AccountInfo:kn,TransferXrt:Ma,ApproveXrt:Fn,XrtInfo:za,NftInfo:ma,VestingInfo:ja,TransferNft:_a,CreateVesting:Kn},setup(){return(async()=>{try{await yn.init({networks:[11155111],infura:{networkId:11155111,key:"c1ea69ab1e0a4c6aa6a9dcd0641aecc7"}})}catch(e){console.log(e)}})(),{$web3:yn}}};const Za=(0,b.Z)(La,[["render",an]]);var Ka=Za;const Xa=[{path:"/",name:"Home",component:Te,meta:{title:"Dashboard"}},{path:"/rws-buy",name:"rwsActivate",component:Me,meta:{title:"Buy a Subscription"}},{path:"/rws-setup",name:"rwsSetup",component:De,meta:{title:"Setup a Subscription"}},{path:"/rws-setup-new",name:"rwsSetupNew",component:je,meta:{title:"New Subscription setup"}},{path:"/telemetry",name:"telemetry",component:Lt,meta:{title:"Devices control panel"}},{path:"/services",name:"services",component:ze,meta:{title:"Services"}},{path:"/robonomics-club",name:"robonomics-club",component:Ka,meta:{title:"Robonomics club"}},{path:"/:pathMatch(.*)*",component:Se}],Ja=(0,E.p7)({history:(0,E.r5)(),routes:Xa});var qa=Ja;const Ga=(0,U.MT)({state:{name:"Vue"}});var Qa=Ga,eo={install:e=>{e.config.globalProperties.$filters={balance(e,t,n){return"string"===typeof e||"number"===typeof e||"bigint"===typeof e?`${m(e,t,4)} ${n}`:""}}}};window.Buffer=a.lW,w();const to=(0,r.ri)(D);to.use(qa).use(Qa).use(eo).use(pe,{endpoint:"wss://kusama.rpc.robonomics.network/"}).use(B,{api:{gateway:"https://ipfs.url.today"},gateways:["https://ipfs.url.today/ipfs/","https://cf-ipfs.com/ipfs/","https://ipfs.io/ipfs/","https://gateway.pinata.cloud/ipfs/","https://gateway.ipfs.io/ipfs/","https://aira.mypinata.cloud/ipfs/"]}).use(o.$,{store:Qa}).mount("#app")},95856:function(){},46601:function(){},42480:function(){},63897:function(){},55024:function(){}},t={};function n(a){var o=t[a];if(void 0!==o)return o.exports;var r=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.loaded=!0,r.exports}n.m=e,function(){n.amdO={}}(),function(){var e=[];n.O=function(t,a,o,r){if(!a){var s=1/0;for(l=0;l<e.length;l++){a=e[l][0],o=e[l][1],r=e[l][2];for(var i=!0,u=0;u<a.length;u++)(!1&r||s>=r)&&Object.keys(n.O).every((function(e){return n.O[e](a[u])}))?a.splice(u--,1):(i=!1,r<s&&(s=r));if(i){e.splice(l--,1);var c=o();void 0!==c&&(t=c)}}return t}r=r||0;for(var l=e.length;l>0&&e[l-1][2]>r;l--)e[l]=e[l-1];e[l]=[a,o,r]}}(),function(){n.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return n.d(t,{a:t}),t}}(),function(){var e,t=Object.getPrototypeOf?function(e){return Object.getPrototypeOf(e)}:function(e){return e.__proto__};n.t=function(a,o){if(1&o&&(a=this(a)),8&o)return a;if("object"===typeof a&&a){if(4&o&&a.__esModule)return a;if(16&o&&"function"===typeof a.then)return a}var r=Object.create(null);n.r(r);var s={};e=e||[null,t({}),t([]),t(t)];for(var i=2&o&&a;"object"==typeof i&&!~e.indexOf(i);i=t(i))Object.getOwnPropertyNames(i).forEach((function(e){s[e]=function(){return a[e]}}));return s["default"]=function(){return a},n.d(r,s),r}}(),function(){n.d=function(e,t){for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})}}(),function(){n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){n.nmd=function(e){return e.paths=[],e.children||(e.children=[]),e}}(),function(){var e={143:0};n.O.j=function(t){return 0===e[t]};var t=function(t,a){var o,r,s=a[0],i=a[1],u=a[2],c=0;if(s.some((function(t){return 0!==e[t]}))){for(o in i)n.o(i,o)&&(n.m[o]=i[o]);if(u)var l=u(n)}for(t&&t(a);c<s.length;c++)r=s[c],n.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return n.O(l)},a=self["webpackChunkdapp_robonomics_network"]=self["webpackChunkdapp_robonomics_network"]||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))}();var a=n.O(void 0,[998],(function(){return n(48900)}));a=n.O(a)})();
//# sourceMappingURL=app.9072d618.js.map